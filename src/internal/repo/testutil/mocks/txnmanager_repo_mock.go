// Code generated by mockery v2.30.1. DO NOT EDIT.

package repomock

import (
	cdom "github.com/mrpandey/gobp/src/internal/core/domain/common"
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// TxnManagerInterface is an autogenerated mock type for the TxnManagerInterface type
type TxnManagerInterface struct {
	mock.Mock
}

// Begin provides a mock function with given fields:
func (_m *TxnManagerInterface) Begin() (cdom.TxnManagerInterface, func()) {
	ret := _m.Called()

	var r0 cdom.TxnManagerInterface
	var r1 func()
	if rf, ok := ret.Get(0).(func() (cdom.TxnManagerInterface, func())); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() cdom.TxnManagerInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cdom.TxnManagerInterface)
		}
	}

	if rf, ok := ret.Get(1).(func() func()); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(func())
		}
	}

	return r0, r1
}

// Commit provides a mock function with given fields:
func (_m *TxnManagerInterface) Commit() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetTx provides a mock function with given fields:
func (_m *TxnManagerInterface) GetTx() *gorm.DB {
	ret := _m.Called()

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func() *gorm.DB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}

// Rollback provides a mock function with given fields:
func (_m *TxnManagerInterface) Rollback() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTxnManagerInterface creates a new instance of TxnManagerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTxnManagerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *TxnManagerInterface {
	mock := &TxnManagerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
